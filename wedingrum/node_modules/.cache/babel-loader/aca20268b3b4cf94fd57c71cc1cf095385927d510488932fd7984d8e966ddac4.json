{"ast":null,"code":"import React,{useState}from'react';import dayjs from'dayjs';import{LocalizationProvider}from'@mui/x-date-pickers/LocalizationProvider';import{AdapterDayjs}from'@mui/x-date-pickers/AdapterDayjs';import{DateCalendar}from'@mui/x-date-pickers/DateCalendar';import'./Calender.scss';// 스타일 파일을 불러옵니다.\nimport{useRecoilState}from\"recoil\";import{startDateState,endDateState}from\"../../../recoil/atoms/loginState\";import{jsx as _jsx}from\"react/jsx-runtime\";const DateCalendarFormProps=()=>{// const [startValue, setStartValue] = useState(dayjs('2023-11-17'));\n// const [endValue, setEndValue] = useState(dayjs('2023-11-20'));\nconst[startDate,setStartDate]=useRecoilState(startDateState);//useState와 거의 비슷한 사용법\n// const defaultDate1 = dayjs('2023-11-17');\n// const defaultDate2 = dayjs('2023-11-20');\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"two-calendars-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"calendar-container\",children:/*#__PURE__*/_jsx(LocalizationProvider,{dateAdapter:AdapterDayjs,children:/*#__PURE__*/_jsx(DateCalendar// defaultValue={startValue} \n,{views:['year','month','day'],value:dayjs(startDate),onChange:newValue=>setStartDate(newValue.format('YYYY-MM-DD'))// onChange={(newValue) => console.log(newValue.toDate())}\n})})})});};export default DateCalendarFormProps;","map":{"version":3,"names":["React","useState","dayjs","LocalizationProvider","AdapterDayjs","DateCalendar","useRecoilState","startDateState","endDateState","jsx","_jsx","DateCalendarFormProps","startDate","setStartDate","className","children","dateAdapter","views","value","onChange","newValue","format"],"sources":["C:/Users/user/Desktop/WeddingRum-ec2/wedingrum/src/pages/Reservations/Reservations/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport './Calender.scss'; // 스타일 파일을 불러옵니다.\r\nimport { useRecoilState } from \"recoil\";\r\nimport { startDateState, endDateState } from \"../../../recoil/atoms/loginState\";\r\n\r\nconst DateCalendarFormProps = () => {\r\n  // const [startValue, setStartValue] = useState(dayjs('2023-11-17'));\r\n  // const [endValue, setEndValue] = useState(dayjs('2023-11-20'));\r\n  const [startDate, setStartDate] = useRecoilState(startDateState); //useState와 거의 비슷한 사용법\r\n  // const defaultDate1 = dayjs('2023-11-17');\r\n  // const defaultDate2 = dayjs('2023-11-20');\r\n\r\n  return (\r\n    <div className=\"two-calendars-container\">\r\n      <div className=\"calendar-container\">\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n          <DateCalendar\r\n            // defaultValue={startValue} \r\n            views={['year', 'month', 'day']}\r\n            value={dayjs(startDate)} \r\n            onChange={(newValue) => setStartDate(newValue.format('YYYY-MM-DD'))}\r\n            // onChange={(newValue) => console.log(newValue.toDate())}\r\n          />\r\n        </LocalizationProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateCalendarFormProps;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,oBAAoB,KAAQ,0CAA0C,CAC/E,OAASC,YAAY,KAAQ,kCAAkC,CAC/D,OAASC,YAAY,KAAQ,kCAAkC,CAC/D,MAAO,iBAAiB,CAAE;AAC1B,OAASC,cAAc,KAAQ,QAAQ,CACvC,OAASC,cAAc,CAAEC,YAAY,KAAQ,kCAAkC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhF,KAAM,CAAAC,qBAAqB,CAAGA,CAAA,GAAM,CAClC;AACA;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,cAAc,CAACC,cAAc,CAAC,CAAE;AAClE;AACA;AAEA,mBACEG,IAAA,QAAKI,SAAS,CAAC,yBAAyB,CAAAC,QAAA,cACtCL,IAAA,QAAKI,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjCL,IAAA,CAACP,oBAAoB,EAACa,WAAW,CAAEZ,YAAa,CAAAW,QAAA,cAC9CL,IAAA,CAACL,YACC;AAAA,EACAY,KAAK,CAAE,CAAC,MAAM,CAAE,OAAO,CAAE,KAAK,CAAE,CAChCC,KAAK,CAAEhB,KAAK,CAACU,SAAS,CAAE,CACxBO,QAAQ,CAAGC,QAAQ,EAAKP,YAAY,CAACO,QAAQ,CAACC,MAAM,CAAC,YAAY,CAAC,CAClE;AAAA,CACD,CAAC,CACkB,CAAC,CACpB,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}